<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>

  <log4net>
    <root>
      <!--(高) OFF > FATAL > ERROR > WARN > INFO > DEBUG > ALL (低) -->
      <!--级别按以上顺序，如果level选择error，那么程序中即便调用info，也不会记录日志-->
      <level value="ALL" />
      <!--appender-ref可以理解为某种具体的日志保存规则，包括生成的方式、命名方式、展示方式-->
      <appender-ref ref="MyErrorAppender"/>
    </root>

    <appender name="MyErrorAppender" type="log4net.Appender.RollingFileAppender">
      <!--日志路径，相对于项目根目录-->
      <param name= "File" value= "Log\\"/>
      <!--是否是向文件中追加日志-->
      <param name= "AppendToFile" value= "true"/>
      <!--日志根据日期滚动-->
      <param name= "RollingStyle" value= "Date"/>
      <!--日志文件名格式为:日期文件夹/Error_2019_3_19.log,前面的yyyyMMdd/是指定文件夹名称-->
      <param name= "DatePattern" value= "yyyyMMdd/Error_yyyy_MM_dd&quot;.log&quot;"/>
      <!--日志文件名是否是固定不变的-->
      <param name= "StaticLogFileName" value= "false"/>
      <!--日志文件大小，可以使用"KB", "MB" 或 "GB"为单位-->
      <!--<param name="MaxFileSize" value="500MB" />-->
      <layout type="log4net.Layout.PatternLayout,log4net">
        <!--%n 回车-->
        <!--%d 当前语句运行的时刻，格式%date{yyyy-MM-dd HH:mm:ss,fff}-->
        <!--%t 引发日志事件的线程，如果没有线程名就使用线程号-->
        <!--%p 日志的当前优先级别-->
        <!--%c 当前日志对象的名称-->
        <!--%m 输出的日志消息-->
        <!--%-数字 表示该项的最小长度，如果不够，则用空格 -->
        <param name="ConversionPattern" value="========[Begin]========%n%d [线程%t] %-5p %c 日志正文如下- %n%m%n%n" />
      </layout>
      <!-- 最小锁定模型，可以避免名字重叠。文件锁类型，RollingFileAppender本身不是线程安全的，-->
      <!-- 如果在程序中没有进行线程安全的限制，可以在这里进行配置，确保写入时的安全。-->
      <!-- 文件锁定的模式，官方文档上他有三个可选值“FileAppender.ExclusiveLock, FileAppender.MinimalLock and FileAppender.InterProcessLock”，-->
      <!-- 默认是第一个值，排他锁定，一次值能有一个进程访问文件，close后另外一个进程才可以访问；第二个是最小锁定模式，允许多个进程可以同时写入一个文件；第三个目前还不知道有什么作用-->
      <!-- 里面为什么是一个“+”号。。。问得好！我查了很久文件也不知道为什么不是点，而是加号。反正必须是加号-->
      <param name="lockingModel"  type="log4net.Appender.FileAppender+MinimalLock" />

      <!--日志过滤器，配置可以参考其他人博文：https://www.cnblogs.com/cxd4321/archive/2012/07/14/2591142.html -->
      <filter type="log4net.Filter.LevelMatchFilter">
        <LevelToMatch value="ERROR" />
      </filter>
      <!-- 上面的过滤器，其实可以写得很复杂，而且可以多个以or的形式并存。如果符合过滤条件就会写入日志，如果不符合条件呢？不是不要了-->
      <!-- 相反是不符合过滤条件也写入日志，所以最后加一个DenyAllFilter，使得不符合上面条件的直接否决通过-->
      <filter type="log4net.Filter.DenyAllFilter" />
    </appender>
  </log4net>
</configuration>